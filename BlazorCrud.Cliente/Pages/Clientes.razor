@page "/clientes"

@using BlazorCrud.Shared;
@using CurrieTechnologies.Razor.SweetAlert2;
@using BlazorCrud.Cliente.Services
@inject SweetAlertService Swal;
@inject IClienteService clienteService;


<h3>Clientes</h3>
<a class="btn btn-success btn-sm mb-3" href="mascota">Agregar Cliente</a>  

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Dueño</th>
            <th>Descripción</th>
        </tr>
    </thead> 
    <tbody>
        @if (listaClientes == null)
        {
            <tr>
                <td colspan="5" align="center">
                    <img width="50px" src="https:media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                </td>
            </tr>
        }
        else
        {
            foreach (var item in listaClientes)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Correo</td>
                    <td>@item.Contrasenia</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="mascota/@item.Id">
                            @* <i class="oi oi-pencil"></i> *@
                            Editar
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-danger btn-sm ms-2" @onclick="(()=>Eliminar(item.Id))">
                           @*  <i class="oi oi-trash"></i> *@
                           Eliminar
                        </a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>




@code {
    List<ClienteDTO>? listaClientes = null;

    protected override async Task OnInitializedAsync()
    {
        listaClientes = await clienteService.Lista();
    }

    private async Task Eliminar (int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
        {
            Title = "Eliminar Mascota",
            Text = "Desea eliminar Mascota",
            Icon = SweetAlertIcon.Question,
            ShowCancelButton=true
        });
        if (resultado.IsConfirmed)
        {
            var eliminado = await clienteService.Eliminar(id);
            if (eliminado)
            { 
                listaClientes = listaClientes!.FindAll(e => e.Id != id);
            }
        }
    }

    private async Task Editar(int id)
    {
        var mascota = listaClientes!.FirstOrDefault(e => e.Id == id);
        if (mascota!=null)
        {
            var resultado = await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Editar Mascota",
                    Text = "Ingrese el nuevo nombre de la Mascota",
                    Input = SweetAlertInputType.Text,
                    InputPlaceholder = mascota.Correo,
                    ShowCancelButton = true,
                    ConfirmButtonText = "Guardar",
                    CancelButtonText = "Cancelar",
                });
        }
    }
}

